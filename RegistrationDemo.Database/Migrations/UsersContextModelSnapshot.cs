// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationDemo.Database;

#nullable disable

namespace RegistrationDemo.Database.Migrations
{
    [DbContext(typeof(UsersContext))]
    partial class UsersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RegistrationDemo.Database.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Lithuania"
                        });
                });

            modelBuilder.Entity("RegistrationDemo.Database.Models.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            Name = "Minsk"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 1L,
                            Name = "Grodno"
                        },
                        new
                        {
                            Id = 3L,
                            CountryId = 1L,
                            Name = "Brest"
                        },
                        new
                        {
                            Id = 4L,
                            CountryId = 1L,
                            Name = "Gomel"
                        },
                        new
                        {
                            Id = 5L,
                            CountryId = 1L,
                            Name = "Mogilev"
                        },
                        new
                        {
                            Id = 6L,
                            CountryId = 1L,
                            Name = "Vitebsk"
                        },
                        new
                        {
                            Id = 7L,
                            CountryId = 2L,
                            Name = "Vilnius"
                        },
                        new
                        {
                            Id = 8L,
                            CountryId = 2L,
                            Name = "Kaunas"
                        },
                        new
                        {
                            Id = 9L,
                            CountryId = 2L,
                            Name = "Klaipeda"
                        });
                });

            modelBuilder.Entity("RegistrationDemo.Database.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RegistrationDemo.Database.Models.Province", b =>
                {
                    b.HasOne("RegistrationDemo.Database.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RegistrationDemo.Database.Models.User", b =>
                {
                    b.HasOne("RegistrationDemo.Database.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistrationDemo.Database.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
